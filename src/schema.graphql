# import Link, LinkSubscriptionPayload, Vote, VoteSubscriptionPayload, LinkOrderByInput from './generated/prisma.graphql'

type Query {
  info: String!,
  feed(filter: String, skip: Int, first: Int, orderBy: LinkOrderByInput): Feed!,
  link(id: ID!): Link
}

type Mutation {
  singup(name: String!, email:String!, password:String!): AuthPayLoad
  login(email:String!, password:String!): AuthPayLoad
  postLink(description: String!, url: String!): Link! 
  updateLink(id: ID!, description: String, url: String): Link 
  deleteLink(id: ID!): Link
  vote(linkId: ID!): Vote
}

type Subscription {
  newLink: LinkSubscriptionPayload
  updateLink: LinkSubscriptionPayload
  deleteLink: LinkSubscriptionPayload
  newVote: VoteSubscriptionPayload 
}

type Feed {
  count: Int!
  links: [Link!]!
}
type AuthPayLoad{
  token: String
  user: User
}

type User{
  id: ID!
  name: String!
  email: String!
  links: [Link!]!
}